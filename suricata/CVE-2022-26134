######################################################################################################################

https://www.rapid7.com/blog/post/2022/06/02/active-exploitation-of-confluence-cve-2022-26134/
https://github.com/jbaines-r7/through_the_wire/blob/main/through_the_wire.py
GET/POST/PUT Observed -> "curl -v http://10.0.0.28:8090/${@java.lang.Runtime@getRuntime().exec("touch /tmp/r7")}/"

######################################################################################################################

# Looks for the specific string "Runtime().exec"

      alert tcp $EXTERNAL_NET any -> $HOME_NET any(msg:"CVE-2022-26134 Response"; \
      flow:to_client, stateless; \
      uricontent:"Runtime().exec”; nocase; \
      priority:2; \
      metadata: Not tested for FP rate or accuracy; \
      reference:url,https://www.rapid7.com/blog/post/2022/06/02/active-exploitation-of-confluence-cve-2022-26134, CVE-2022-26134; \
      sid:1000001; rev:1;) \
                
# Looks for a 302 response from an internal device with the “X-Cmd-Response: confluence” HTTP header in hex to an external device

      alert tcp $HOME_NET any -> $EXTERNAL_NET any(msg:"CVE-2022-26134 X-CMD Response"; \
      flow:to_server, stateless; \
      content:"302"; http_stat_code; depth:5; \
      content:"X-Cmd-Response:\ confluence"; nocase; \
      priority:2; \
      metadata: Not tested for FP rate or accuracy; \
      reference:url,https://www.rapid7.com/blog/post/2022/06/02/active-exploitation-of-confluence-cve-2022-26134, CVE-2022-26134; \
      sid:1000002; rev:1;) \


Way Forward:

- make some more rules for any potential obfuscation and prolly test

